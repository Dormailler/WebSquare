<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>동적으로 컴포넌트 생성하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="db7d7f842b451ed6" /></head><body><div id="content"><h1 id="r_502f01e16d140847" class="chapter_title">동적으로 컴포넌트 생성하기</h1><h1 id="r_b8179e2d95716b1c" class="element heading1" data-element-id="b8179e2d95716b1c"><div class="r_heading_inner"><span class="heading1_n">1</span><span>개요</span></div></h1><p id="r_f470752d30fc9569" class="element normal" data-element-id="f470752d30fc9569">동적으로 UI 컴포넌트를 생성 및 추가하는 API 예제입니다.</p><p id="r_500f4f22517e414c" class="element normal" data-element-id="500f4f22517e414c">'<em>$p.dynamicCreate</em>'로 구현할 수 있습니다.</p><p id="r_06755153b3ce1850" class="element r_example_link_p" data-element-id="06755153b3ce1850"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00045">P00045</a></p><h1 id="r_db2ce65d1d9004e5" class="element heading1" data-element-id="db2ce65d1d9004e5"><div class="r_heading_inner"><span class="heading1_n">2</span><span>구현된 기능</span></div></h1><ul id="r_1f0484c8b6a672b4" class="element unordered_list" data-element-id="1f0484c8b6a672b4"><li><p>Trigger 생성 후 추가하기</p></li><li><p>InputBox 생성 후 추가하기</p></li></ul><h1 id="r_9a56f7c94ee9bc04" class="element heading1" data-element-id="9a56f7c94ee9bc04"><div class="r_heading_inner"><span class="heading1_n">3</span><span>예제 테스트 방법</span></div></h1><dl id="r_e8a81b0051a93e12" class="element definition_list" data-element-id="e8a81b0051a93e12"><dt>버튼 생성 및 추가하기</dt><dd><p>1. 버튼 <span class="r_exec_btn_style_span">실행1</span>을 클릭합니다.</p><p>2. 화면에 Trigger 컴포넌트가 추가됩니다.</p><p>[실행 예시 이미지]</p><p><img alt="" src="images/image015.png" width="407" height="75" /></p></dd></dl><dl id="r_6398a81a15a81134" class="element definition_list" data-element-id="6398a81a15a81134"><dt>input 생성 및 추가하기</dt><dd><p>1. 버튼 <span class="r_exec_btn_style_span">실행2</span>를 클릭합니다.</p><p>2. 화면에 Input 컴포넌트가 추가됩니다.</p><p>[실행 예시 이미지]</p><p><img alt="" src="images/image016.png" width="338" height="72" /></p></dd></dl><h1 id="r_57a46759f0523cd2" class="element heading1" data-element-id="57a46759f0523cd2"><div class="r_heading_inner"><span class="heading1_n">4</span><span>구현 예시</span></div></h1><h2 id="r_7020f49de0b5ee5d" class="element heading2" data-element-id="7020f49de0b5ee5d"><div class="r_heading_inner"><span class="heading2_n">4.1</span><span>알아두기</span></div></h2><pre id="r_3cce95556747f22b" class="element pre" data-element-id="3cce95556747f22b">동적으로 생성할 컴포넌트가 추가될 부모 컴포넌트가 있어야 합니다. $p.dynamicCreate API는 부모 컴포넌트 객체를 받기 때문에 body에 추가할 수 없습니다.
예제에서는 <span class="r_blue001_span">grp_target</span> id를 가진 Group 컴포넌트를 부모 컴포넌트로 지정하였습니다.</pre><div id="r_480ff23a92071ccc" class="element caution" data-element-id="480ff23a92071ccc"><p>동적으로 생성할 컴포넌트의 ID는 중복이 되어서는 안됩니다.</p><p>추가할 컴포넌트명(pluginName)은 <a class="reference text" href="sp5_ex_ap_component_plugin_name.xhtml" data-reference="d80157bb40aa5041">컴포넌트의 Plugin Name</a> 에 자세히 나와있습니다.</p></div><h2 id="r_19fe01612d3ec800" class="element heading2" data-element-id="19fe01612d3ec800"><div class="r_heading_inner"><span class="heading2_n">4.2</span><span>Trigger 컴포넌트 생성 및 추가하기</span></div></h2><div id="r_2121a6bb69690d4a" class="element code support_code_numbering" data-element-id="2121a6bb69690d4a"><pre><span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> _comp;
<span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> strID;
<span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> objDate;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//중복되지 않는 ID 생성을 위한 스크립트</span>
<span class="digits_10 code_line"></span>objDate = <span class="r_h_keyword_span">new</span> Date();
<span class="digits_10 code_line"></span>strID = <span class="r_h_string_span">"btn_ex_"</span> + objDate.getDate() + <span class="r_h_string_span">"_"</span>+ objDate.getTime();
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//버튼(trigger) 생성 </span>
<span class="digits_10 code_line"></span>_comp = $p.dynamicCreate(
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;strID,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"trigger"</span>, <span class="r_h_comment_span">//생성할 컴포넌트의 pluginName</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style : <span class="r_h_string_span">""</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,className : <span class="r_h_string_span">"btn_cm mr_def"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;}, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;grp_target  <span class="r_h_comment_span">//생성(추가)할 위치의 컴포넌트 객체</span>
<span class="digits_10 code_line"></span>);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//생성된 trigger의 value 할당.</span>
<span class="digits_10 code_line"></span>_comp.setValue(<span class="r_h_string_span">"버튼"</span>);</pre></div><h2 id="r_99daa1e20d64e3aa" class="element heading2" data-element-id="99daa1e20d64e3aa"><div class="r_heading_inner"><span class="heading2_n">4.3</span><span>InputBox 컴포넌트 생성 및 추가하기</span></div></h2><div id="r_004404267d4faf4d" class="element code support_code_numbering" data-element-id="004404267d4faf4d"><pre><span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> _comp;
<span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> strID;
<span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> objDate;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//중복되지 않는 ID 생성을 위한 스크립트</span>
<span class="digits_10 code_line"></span>objDate = <span class="r_h_keyword_span">new</span> Date();
<span class="digits_10 code_line"></span>strID = <span class="r_h_string_span">"ipt_ex_"</span> + objDate.getDate() + <span class="r_h_string_span">"_"</span>+ objDate.getTime();
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//input 생성 </span>
<span class="digits_10 code_line"></span>_comp = $p.dynamicCreate(
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;strID,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"input"</span>,  <span class="r_h_comment_span">//생성할 컴포넌트의 pluginName</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style : <span class="r_h_string_span">"min-width:80px; min-height:20px;"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className : <span class="r_h_string_span">"mr_def"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;placeholder : <span class="r_h_string_span">"입력하세요."</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;}, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;grp_target  <span class="r_h_comment_span">//생성(추가)할 위치의 컴포넌트 객체 (ID 문자열이 아님을 주의합니다)</span>
<span class="digits_10 code_line"></span>);</pre></div><h1 id="r_963cdb53f07a2af1" class="element heading1" data-element-id="963cdb53f07a2af1"><div class="r_heading_inner"><span class="heading1_n">5</span><span>주요 API</span></div></h1><dl id="r_f54a459f3558de48" class="element definition_list" data-element-id="f54a459f3558de48"><dt><span class="r_ex_api_method_span">$p.dynamicCreate( id , tagName , options , parent , itemSet )</span></dt></dl><h1 id="r_5b53b6194408550b" class="element heading1" data-element-id="5b53b6194408550b"><div class="r_heading_inner"><span class="heading1_n">6</span><span>참고 문서</span></div></h1><ul id="r_82f838ba77f85fca" class="element unordered_list" data-element-id="82f838ba77f85fca"><li><p><em>[웹스퀘어5 SP5 개발 가이드] 컴포넌트 동적 생성</em></p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide/4c4960bc7e1f2bf6#0c6bf8fbba28fec5">https://docs1.inswave.com/sp5_user_guide/4c4960bc7e1f2bf6#0c6bf8fbba28fec5</a></p></li></ul><h1 id="r_f63d909738830d33" class="element heading1" data-element-id="f63d909738830d33"><div class="r_heading_inner"><span class="heading1_n">7</span><span>참고 동영상</span></div></h1><ul id="r_9f5a1f7f4194bfbe" class="element unordered_list" data-element-id="9f5a1f7f4194bfbe"><li><p><em>GridView 컴포넌트 동적 생성</em> </p><p>링크 : <a class="link" href="https://youtu.be/mLJnDEBfavc">https://youtu.be/mLJnDEBfavc</a></p><p><img alt="" src="images/image017.png" width="592" height="419" /></p></li></ul></div></body></html>