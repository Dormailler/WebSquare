<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>GridView의 A컬럼의 선택값에 따라 B컬럼 목록 구성하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="db7d7f842b451ed6" /></head><body><div id="content"><h1 id="r_82e63be8dd7cc16a" class="chapter_title">GridView의 A컬럼의 선택값에 따라 B컬럼 목록 구성하기</h1><h1 id="r_cb17543d99d573b8" class="element heading1" data-element-id="cb17543d99d573b8"><div class="r_heading_inner"><span class="heading1_n">1</span><span>개요</span></div></h1><pre id="r_04a3f468e10e39fc" class="element pre" data-element-id="04a3f468e10e39fc">GridView의 A 컬럼의 값에 따라 B 컬럼의 목록을 동적으로 구성하는 방법 중 LinkedDataList를 활용한 예제입니다.
GridView의 <span class="r_ex_text_emp1_span">분류</span> 컬럼의 선택값에 따라 <span class="r_ex_text_emp1_span">도서명</span>목록이 변경됩니다.</pre><p id="r_e87b75981d90dc2a" class="element r_example_link_p" data-element-id="e87b75981d90dc2a"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00041">P00041</a></p><h1 id="r_06363b989f6bb542" class="element heading1" data-element-id="06363b989f6bb542"><div class="r_heading_inner"><span class="heading1_n">2</span><span>구현된 기능</span></div></h1><ul id="r_f859a014880ebc55" class="element unordered_list" data-element-id="f859a014880ebc55"><li><p>분류 컬럼의 선택 값에 따라 도서명 컬럼의 목록 구성하기</p></li></ul><div id="r_878bd00ab7dea221" class="element caution" data-element-id="878bd00ab7dea221"><p>이 예제는 문서를 통해 구조를 대략 이해하고 예제 파일을 실행하여 테스트해보는 것을 추천합니다.</p></div><h1 id="r_97ba28e37a49be39" class="element heading1" data-element-id="97ba28e37a49be39"><div class="r_heading_inner"><span class="heading1_n">3</span><span>예제 테스트 방법</span></div></h1><dl id="r_13fb449ec82cce24" class="element definition_list" data-element-id="13fb449ec82cce24"><dt>1. 변경 전 분류 컬럼의 값과 도서명 컬럼의 목록 확인하기</dt><dd><p>분류 컬럼의 값과 도서명 컬럼의 목록을 확인합니다.</p><p>[실행된 화면 예시 이미지]</p><p><img alt="" src="images/image338.png" width="609" height="226" /></p></dd><dt>2. 분류 컬럼의 목록에서 값 선택하기</dt><dd><p>분류 컬럼의 목록에서 인문을 선택합니다.</p><p>[실행된 화면 예시 이미지]</p><p><img alt="" src="images/image339.png" width="614" height="232" /></p></dd><dt>3. 변경된 목록 확인하기</dt><dd><p>인문에 해당하는 도서명으로 목록이 변경되었음을 확인합니다.</p><p>[실행된 화면 예시 이미지]</p><p><img alt="" src="images/image340.png" width="612" height="228" /></p></dd></dl><h1 id="r_c7f2046db933a6d9" class="element heading1" data-element-id="c7f2046db933a6d9"><div class="r_heading_inner"><span class="heading1_n">4</span><span>구현 예시</span></div></h1><div id="r_8b1c48f922b34a9b" class="element caution" data-element-id="8b1c48f922b34a9b"><p>GridView와 DataCollection의 기본에 대한 이해도가 있다는 전제로 주요 구조, 설정만 작성되어있습니다.</p><p>LinkedDataList의 이해가 없는 분들은 관련 링크를 통해 기본 구조 등을 확인하시는 것을 권장합니다.</p></div><h2 id="r_9f753f50dd99ef7c" class="element heading2" data-element-id="9f753f50dd99ef7c"><div class="r_heading_inner"><span class="heading2_n">4.1</span><span>예제의 DataCollection 정보 요약</span></div></h2><pre id="r_c312d4f7f70ca742" class="element pre" data-element-id="c312d4f7f70ca742">이 예제는 2개의 DataList와 2개의 LinkedDataList를 사용했습니다.
아래는 예제에 구현된 DataCollection ID별 설명입니다.</pre><table id="r_87b6dea5164d073d" class="element table" data-element-id="87b6dea5164d073d"><thead><tr><th><p>ID</p></th><th><p>Type</p></th><th><p>용도</p></th></tr></thead><tbody><tr><td><p>dlt_list</p></td><td><p>DataList</p></td><td><p>GridView와 연결된 데이터.</p></td></tr><tr><td><p>dlt_code</p></td><td><p>DataList</p></td><td><p>분류 컬럼과 도서명 컬럼의 목록을 구성할 전체 코드 목록입니다.</p><p>이 목록이 분류 목록과 도서명 목록의 원천 데이터입니다.</p><p>ldt_linkcode1, ldt_linkcode2 의 원천 DataList.</p></td></tr><tr><td><p>ldt_linkcode1</p></td><td><p>LinkedDataList</p></td><td><p>분류 컬럼의 목록을 구성합니다. dlt_code에서 upperCode 컬럼의 값이 0 인 데이터만 추출.</p></td></tr><tr><td><p>ldt_linkcode2</p></td><td><p>LinkedDataList</p></td><td><p>도서명 컬럼의 목록을 구성합니다.</p><p>dlt_code에서 upperCode 컬럼의 값이 dlt_list의 category 컬럼의 값과 같은 목록을 추출.</p><p>dlt_list가 GridView와 연결되어 있는 경우 GridView의 행 별로 조건이 적용됩니다.</p></td></tr></tbody></table><h2 id="r_8a537f0bdc6e65ed" class="element heading2" data-element-id="8a537f0bdc6e65ed"><div class="r_heading_inner"><span class="heading2_n">4.2</span><span>dlt_code 데이터 구조 알아보기</span></div></h2><pre id="r_c3d776c5ccb2f0ec" class="element pre" data-element-id="c3d776c5ccb2f0ec">dlt_code의 컬럼은 label, code, upperCode로 구성되어있습니다.</pre><ul id="r_c53365bb027eeee3" class="element unordered_list" data-element-id="c53365bb027eeee3"><li><p>label : 화면에 출력될 값</p></li><li><p>code : key 값</p></li><li><p>upperCode : 상위 그룹의 key 값</p></li></ul><pre id="r_62c8cf9b62709ea8" class="element pre" data-element-id="62c8cf9b62709ea8">아래는 dlt_code의 데이터를 담은 스튜디오 이미지 입니다.</pre><div id="r_d5d07c5c59dc8a48" class="element image" data-element-id="d5d07c5c59dc8a48"><p class="caption"><span class="image_caption_n">그림 1.</span>dlt_code의 데이터 구조 예시</p><p class="content"><img alt="" src="images/image341.png" width="585" height="889" /></p></div><h2 id="r_5d0dc413c33492b5" class="element heading2" data-element-id="5d0dc413c33492b5"><div class="r_heading_inner"><span class="heading2_n">4.3</span><span>ldt_linkcode1 구조 알아보기</span></div></h2><pre id="r_12518ef9195328a0" class="element pre" data-element-id="12518ef9195328a0">GridView의 <span class="r_blue001_span">분류</span> 목록과 연결되어있습니다.
ldt_linkcode1는 dlt_code와 bind 되어있으며 조건은 <span class="r_ex_text_emp1_span">upperCode == '0'</span> 입니다.</pre><div id="r_3aa38463aaf01958" class="element image" data-element-id="3aa38463aaf01958"><p class="caption"><span class="image_caption_n">그림 2.</span>ldt_linkcode1 설정 예시 이미지</p><p class="content"><img alt="" src="images/image342.png" width="479" height="75" /></p></div><p id="r_aa88da3926147424" class="element normal" data-element-id="aa88da3926147424">아래는 Source 본문입니다.</p><div id="r_a8b3b2407ca3b9fb" class="element code support_code_numbering" data-element-id="a8b3b2407ca3b9fb"><pre><span class="digits_1 code_line"></span>&lt;w2:linkedDataList <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"ldt_linkcode1"</span> <span class="r_h_attribute_name_span">bind</span>=<span class="r_h_attribute_value_span">"dlt_code"</span>&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:condition <span class="r_h_attribute_name_span">type</span>=<span class="r_h_attribute_value_span">"filter"</span>&gt;&lt;![CDATA[upperCode <span class="r_h_attribute_name_span">=</span>= <span class="r_h_attribute_value_span">'0'</span><span class="r_h_attribute_name_span">]]</span>&gt;&lt;/w2:condition&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:condition <span class="r_h_attribute_name_span">type</span>=<span class="r_h_attribute_value_span">"sort"</span>&gt;&lt;![CDATA[]]&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/w2:condition&gt;
<span class="digits_1 code_line"></span>&lt;/w2:linkedDataList&gt;</pre></div><h2 id="r_354543c4c66b2524" class="element heading2" data-element-id="354543c4c66b2524"><div class="r_heading_inner"><span class="heading2_n">4.4</span><span>ldt_linkcode2 구조 알아보기</span></div></h2><pre id="r_7531fff30337a267" class="element pre" data-element-id="7531fff30337a267">GridView의 <span class="r_blue001_span">도서명</span> 목록과 연결되어있습니다.
ldt_linkcode2는 dlt_code와 bind 되어있으며 조건은 <span class="r_ex_text_emp1_span">upperCode == ref ( 'data:dlt_list.category')</span> 입니다.
GridView에 연결된 dlt_list의 category 값이 dlt_code의 upperCode와 같은 데이터만 추출됩니다. GridView의 행 마다 조건이 적용됩니다.</pre><div id="r_25dd8d536b22d7d0" class="element image" data-element-id="25dd8d536b22d7d0"><p class="caption"><span class="image_caption_n">그림 3.</span>ldt_linkcode2 설정 예시 이미지</p><p class="content"><img alt="" src="images/image343.png" width="482" height="78" /></p></div><p id="r_2d79e18e5621053c" class="element normal" data-element-id="2d79e18e5621053c">아래는 Source 본문입니다.</p><div id="r_133563a51e560959" class="element code support_code_numbering" data-element-id="133563a51e560959"><pre><span class="digits_1 code_line"></span>&lt;w2:linkedDataList <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"ldt_linkcode2"</span> <span class="r_h_attribute_name_span">bind</span>=<span class="r_h_attribute_value_span">"dlt_code"</span>&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:condition <span class="r_h_attribute_name_span">type</span>=<span class="r_h_attribute_value_span">"filter"</span>&gt;&lt;![CDATA[upperCode <span class="r_h_attribute_name_span">=</span>= <span class="r_h_attribute_value_span">ref </span><span class="r_h_attribute_name_span">(</span> 'data:dlt_list.category')]]&gt;&lt;/w2:condition&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:condition <span class="r_h_attribute_name_span">type</span>=<span class="r_h_attribute_value_span">"sort"</span>&gt;&lt;![CDATA[]]&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/w2:condition&gt;
<span class="digits_1 code_line"></span>&lt;/w2:linkedDataList&gt;</pre></div><h2 id="r_4734be689fc77c25" class="element heading2" data-element-id="4734be689fc77c25"><div class="r_heading_inner"><span class="heading2_n">4.5</span><span>dlt_list 구조 알아보기</span></div></h2><pre id="r_828706da9cb8cf03" class="element pre" data-element-id="828706da9cb8cf03">GridView에 출력할 데이터입니다.
<span class="r_blue001_span">분류</span> 컬럼과 <span class="r_blue001_span">도서명</span> 컬럼은 selectbox로 구성되어있기 때문에 데이터가 code값으로 구성되어있습니다.</pre><div id="r_b52eaab2471cc84c" class="element image" data-element-id="b52eaab2471cc84c"><p class="caption"><span class="image_caption_n">그림 4.</span>dlt_list 데이터 예시</p><p class="content"><img alt="" src="images/image344.png" width="481" height="276" /></p></div><h2 id="r_f22a5d49327df375" class="element heading2" data-element-id="f22a5d49327df375"><div class="r_heading_inner"><span class="heading2_n">4.6</span><span>GridView 설정하기</span></div></h2><pre id="r_87a71f90f2220034" class="element pre" data-element-id="87a71f90f2220034">GridView의 주요 설정에 대한 예시입니다.</pre><div id="r_46df6968eb1ff7da" class="element image" data-element-id="46df6968eb1ff7da"><p class="caption"><span class="image_caption_n">그림 5.</span>GridView UI 설정 예시</p><p class="content"><img alt="" src="images/image345.png" width="336" height="128" /></p></div><div id="r_dbbe487e28ef1f93" class="element image" data-element-id="dbbe487e28ef1f93"><p class="caption"><span class="image_caption_n">그림 6.</span>GridView의 분류 컬럼의 목록(itemSet) 설정 예시</p><p class="content"><img alt="" src="images/image346.png" width="468" height="693" /></p></div><div id="r_dc8fd31abc34718e" class="element image" data-element-id="dc8fd31abc34718e"><p class="caption"><span class="image_caption_n">그림 7.</span>GridView의 도서명 컬럼의 목록(itemSet) 설정 예시</p><p class="content"><img alt="" src="images/image347.png" width="427" height="689" /></p></div><h2 id="r_f15cdbe7261a8bb0" class="element heading2" data-element-id="f15cdbe7261a8bb0"><div class="r_heading_inner"><span class="heading2_n">4.7</span><span>GridView의 onafteredit 이벤트 적용하기</span></div></h2><pre id="r_b68d5d180ca2ddaf" class="element pre" data-element-id="b68d5d180ca2ddaf"><span class="r_blue001_span">분류</span>가 변경되면 <span class="r_blue001_span">도서명</span> 셀(Cell)의 목록은 변경되지만 셀의 값(value)은 기존에 선택된 값이 남아있게 됩니다. 그래서 사용자가 분류를 변경하면 도서명의 값을 도서명 목록 중 첫번째 값으로 할당하는 스크립트를 GridView의 onafteredit 이벤트를 이용하여 작성합니다.</pre><div id="r_f321365f0c79ff3d" class="element code support_code_numbering" data-element-id="f321365f0c79ff3d"><pre><span class="digits_10 code_line"></span><span class="r_h_comment_span">/**
<span class="digits_10 code_line"></span> * gridView의 afteredit 이벤트 핸들러
<span class="digits_10 code_line"></span> */</span>
<span class="digits_10 code_line"></span>scwin.grd_example_onafteredit = <span class="r_h_keyword_span">function</span>(row,col,value) {
<span class="digits_10 code_line"></span>    <span class="r_h_keyword_span">var</span> id = <span class="r_h_keyword_span">this</span>.getColumnID( col );
<span class="digits_10 code_line"></span>    <span class="r_h_keyword_span">if</span> ( id == <span class="r_h_string_span">'category'</span> ) {
<span class="digits_10 code_line"></span>        <span class="r_h_comment_span">//이미 선택되어있는 value값 변경해주기</span>
<span class="digits_10 code_line"></span>        <span class="r_h_keyword_span">var</span> tmpValue = dlt_code.getMatchedColumnData(<span class="r_h_string_span">"code"</span>,dlt_list.getCellData(row, <span class="r_h_string_span">"category"</span>) ,<span class="r_h_string_span">"upperCode"</span>);
<span class="digits_10 code_line"></span>        <span class="r_h_keyword_span">if</span> (tmpValue[<span class="r_h_number_span">0</span>] != value ) {
<span class="digits_10 code_line"></span>            dlt_list.setCellData(row, <span class="r_h_string_span">"name"</span>, ldt_linkcode2.getCellData(<span class="r_h_number_span">0</span>, <span class="r_h_string_span">"code"</span>));
<span class="digits_10 code_line"></span>        }
<span class="digits_10 code_line"></span>    }
<span class="digits_10 code_line"></span>};</pre></div><h1 id="r_ccec1c3c06e6ef1f" class="element heading1" data-element-id="ccec1c3c06e6ef1f"><div class="r_heading_inner"><span class="heading1_n">5</span><span>참고 문서</span></div></h1><ul id="r_0febeca72ce4adaf" class="element unordered_list" data-element-id="0febeca72ce4adaf"><li><p><strong>[웹스퀘어5 SP5 개발 가이드] DataCollection 설명</strong> </p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide/e8b94a03286e4f9f#a17b30420d501ea7">https://docs1.inswave.com/sp5_user_guide/e8b94a03286e4f9f#a17b30420d501ea7</a></p></li><li><p><strong>[웹스퀘어5 SP5 개발 가이드] LinkedDataList 설명</strong> </p><p>링크 : <a class="link" href="https://docs1.inswave.com/sp5_user_guide/e8b94a03286e4f9f#184bdccaba64841d">https://docs1.inswave.com/sp5_user_guide/e8b94a03286e4f9f#184bdccaba64841d</a></p></li></ul></div></body></html>