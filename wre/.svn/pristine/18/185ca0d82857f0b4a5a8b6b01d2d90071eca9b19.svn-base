<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>동적으로 DataMap, DataList 생성하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="db7d7f842b451ed6" /></head><body><div id="content"><h1 id="r_5cc1330c278f38e2" class="chapter_title">동적으로 DataMap, DataList 생성하기</h1><h1 id="r_b733fe325aa1e591" class="element heading1" data-element-id="b733fe325aa1e591"><div class="r_heading_inner"><span class="heading1_n">1</span><span>개요</span></div></h1><p id="r_bade95abe31d0396" class="element normal" data-element-id="bade95abe31d0396">동적으로 DataMap, DataList를 생성하는 예제입니다.</p><p id="r_167d2586ba42f7a8" class="element r_example_link_p" data-element-id="167d2586ba42f7a8"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00046">P00046</a></p><h1 id="r_82962a2662b8f456" class="element heading1" data-element-id="82962a2662b8f456"><div class="r_heading_inner"><span class="heading1_n">2</span><span>구현된 기능</span></div></h1><ul id="r_5a72bda8bddf8ca6" class="element unordered_list" data-element-id="5a72bda8bddf8ca6"><li><p>DataMap 생성하기</p></li><li><p>DataList 생성하기</p></li></ul><h1 id="r_ff02ca3b76a4c341" class="element heading1" data-element-id="ff02ca3b76a4c341"><div class="r_heading_inner"><span class="heading1_n">3</span><span>예제 테스트 방법</span></div></h1><h2 id="r_c9510fe8155bf1f9" class="element heading2" data-element-id="c9510fe8155bf1f9"><div class="r_heading_inner"><span class="heading2_n">3.1</span><span>알아두기</span></div></h2><p id="r_ecd7955602376f32" class="element normal" data-element-id="ecd7955602376f32">이 예제는 예제 화면의 영역 [<span class="r_blue001_span">로그 확인</span>]의 textarea에 실행 결과 값이 출력됩니다.</p><div id="r_b39518add84d1ac1" class="element image" data-element-id="b39518add84d1ac1"><p class="caption"><span class="image_caption_n">그림 1.</span>로그 출력 영역 참고 이미지</p><p class="content"><img alt="" src="images/image010.png" width="374" height="184" /></p></div><h2 id="r_d766a8c64235554b" class="element heading2" data-element-id="d766a8c64235554b"><div class="r_heading_inner"><span class="heading2_n">3.2</span><span>DataCollection 확인 하기</span></div></h2><dl id="r_81011e57e011d7cb" class="element definition_list" data-element-id="81011e57e011d7cb"><dt>STEP1. 웹스퀘어 컨텍스트 메뉴를 실행합니다.</dt><dd><p>브라우저의 버튼 <span class="r_exec_btn_style_span">DataMap 생성하기</span>의 하단 영역에서 [Ctrl] 키를 누른 채 마우스 오른쪽 버튼을 클릭합니다.</p><p>아래의 이미지와 같이 컨텍스트 메뉴가 노출됩니다. [dataCollection보기] 메뉴를 클릭합니다.</p><p><img alt="" src="images/image011.png" width="242" height="237" /></p><p>DataCollection을 확인할 수 있는 팝업이 생성됩니다.</p></dd><dt>STEP2. dataColleciton의 목록을 클릭하여 생성되어 있는 목록을 확인합니다.</dt><dd><p>아래는 실행된 이미지 예시입니다.</p><p><img alt="" src="images/image012.png" width="544" height="435" /></p></dd></dl><h2 id="r_d404e8d77cc69320" class="element heading2" data-element-id="d404e8d77cc69320"><div class="r_heading_inner"><span class="heading2_n">3.3</span><span>DataMap 생성하기</span></div></h2><dl id="r_5f9a2a289a43902c" class="element definition_list" data-element-id="5f9a2a289a43902c"><dt>STEP1. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="sp5_ex_P00046.xhtml#r_d766a8c64235554b" data-reference="d766a8c64235554b">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>화면의 버튼을 클릭하기 전인 경우 두개의 데이터 객체(dlt_book, dma_userInfo)가 생성되어있습니다. </p></dd><dt>STEP2. 버튼 <span class="r_exec_btn_style_span">DataMap 생성하기</span>를 클릭합니다.</dt><dd><p>로그 출력창에 실행 단계 로그가 출력됨을 확인합니다.</p><p><em>[로그 예시]</em></p><p>[10:44:27] ** [실행1] - DataMap 생성하기 scwin.btn_ex1_onclick 실행 시작 **</p><p>[10:44:27] &gt; 1단계 DataMap 생성 완료</p><p>[10:44:27] &gt; 2단계 DataMap setJSON 호출 완료</p><p>[10:44:27] {"name":"Inswave Systems","address":"서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"}</p><p>[10:44:27] &gt; 3단계 DataMap getJSON 호출 완료</p><p>[10:44:27] ** [실행1] - DataMap 생성하기 scwin.btn_ex1_onclick 실행 종료 **</p></dd><dt>STEP3. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="https://docs1.inswave.com/r/document/view/ttp://docs.inswave.com:1975/r/editor/edit/bbaec6dd1f18a3bb#d766a8c64235554b">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>dataCollection 목록에 <span class="r_blue001_span">dma_dynamic1</span>이 추가되었음을 확인합니다.</p><p>아래의 이미지와 같이 <span class="r_blue001_span">dma_dynamic1</span>을 선택하고 버튼 [<span class="r_blue001_span">조회</span>]를 클릭하여 할당된 데이터를 확인합니다.</p><p><img alt="" src="images/image013.png" width="557" height="422" /></p></dd></dl><h2 id="r_1fb8131c72662488" class="element heading2" data-element-id="1fb8131c72662488"><div class="r_heading_inner"><span class="heading2_n">3.4</span><span>DataList 생성하기</span></div></h2><dl id="r_82c879fac3c4e36b" class="element definition_list" data-element-id="82c879fac3c4e36b"><dt>STEP1. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="sp5_ex_P00046.xhtml#r_d766a8c64235554b" data-reference="d766a8c64235554b">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>화면의 버튼을 클릭하기 전인 경우 두개의 데이터 객체(dlt_book, dma_userInfo)가 생성되어있습니다. </p></dd><dt>STEP2. 버튼 <span class="r_exec_btn_style_span">DataList 생성하기</span>를 클릭합니다.</dt><dd><p>로그 출력창에 실행 단계 로그가 출력됨을 확인합니다.</p><p><em>[로그 예시]</em></p><p>[10:45:30] ** [실행2] - DataList 생성하기 scwin.btn_ex2_onclick 실행 시작 **</p><p>[10:45:30] &gt; 1단계 DataList 생성 완료</p><p>[10:45:30] &gt; 2단계 DataList setJSON 호출 완료</p><p>[10:45:30] [{"code":"1","label":"","rowStatus":"R"},{"code":"2","label":"","rowStatus":"R"},{"code":"3","label":"","rowStatus":"R"}]</p><p>[10:45:30] &gt; 3단계 DataList getAllJSON 호출 완료</p><p>[10:45:30] ** [실행2] - DataList 생성하기 scwin.btn_ex2_onclick 실행 종료 **</p></dd><dt>STEP3. 현재 화면의 DataCollection을 확인합니다.</dt><dd><p>확인 방법은 <a class="reference text" href="https://docs1.inswave.com/r/document/view/ttp://docs.inswave.com:1975/r/editor/edit/bbaec6dd1f18a3bb#d766a8c64235554b">DataCollection 확인 하기</a>에 설명되어있습니다.</p><p>dataCollection 목록에 <span class="r_blue001_span">dlt_dynamic1</span>이 추가되었음을 확인합니다.</p><p>아래의 이미지와 같이 <span class="r_blue001_span">dlt_dynamic1</span>을 선택하고 버튼 [<span class="r_blue001_span">조회</span>]를 클릭하여 할당된 데이터를 확인합니다.</p><p><img alt="" src="images/image014.png" width="566" height="476" /></p></dd></dl><h1 id="r_23547bf9ed202c11" class="element heading1" data-element-id="23547bf9ed202c11"><div class="r_heading_inner"><span class="heading1_n">4</span><span>구현 예시</span></div></h1><h2 id="r_152e64959108075f" class="element heading2" data-element-id="152e64959108075f"><div class="r_heading_inner"><span class="heading2_n">4.1</span><span>DataMap 생성하기</span></div></h2><p id="r_9737385826792b74" class="element normal" data-element-id="9737385826792b74">데이터 객체의 옵션을 JSON으로 할당한 예시입니다.</p><div id="r_97a433d8cd45f3f0" class="element code support_code_numbering" data-element-id="97a433d8cd45f3f0"><pre><span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> jsnOption;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//DataMap 속성 정의</span>
<span class="digits_10 code_line"></span>jsnOption = {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> : <span class="r_h_string_span">"dma_dynamic1"</span>,  <span class="r_h_comment_span">//생성할 DatMap의 ID입니다.</span>
<span class="digits_10 code_line"></span>    <span class="r_h_string_span">"type"</span> : <span class="r_h_string_span">"dataMap"</span>,     <span class="r_h_comment_span">//생성할 데이터객체의 타입입니다. dataMap 고정.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"option"</span> : {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"baseNode"</span>:<span class="r_h_string_span">"map"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"keyInfo"</span> : [
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> : <span class="r_h_string_span">"name"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"name"</span> : <span class="r_h_string_span">"성명"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"dataType"</span> : <span class="r_h_string_span">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> : <span class="r_h_string_span">"address"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"name"</span> : <span class="r_h_string_span">"주소"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"dataType"</span> : <span class="r_h_string_span">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;]
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//1. DataCollection 생성하기</span>
<span class="digits_10 code_line"></span>$p.data.create(jsnOption);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//2. 생성된 객체에 Data 할당하기</span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//옵션에 적용한 id로 직접 접근이 가능합니다.</span>
<span class="digits_10 code_line"></span>dma_dynamic1.setJSON({
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"name"</span> : <span class="r_h_string_span">"Inswave Systems"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"address"</span> : <span class="r_h_string_span">"서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"</span>
<span class="digits_10 code_line"></span>});
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">/*
<span class="digits_10 code_line"></span>//또는 아래와 같이 $p.getComponentById API로 객체를 반환 받아 제어할 수 있습니다.
<span class="digits_10 code_line"></span>let cmpDataMap = $p.getComponentById("dma_dynamic1");
<span class="digits_10 code_line"></span>cmpDataMap.setJSON({
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;"name" : "Inswave Systems",
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;"address" : "서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층"
<span class="digits_10 code_line"></span>});
<span class="digits_10 code_line"></span>*/</span></pre></div><h2 id="r_7e12ed2ef682e938" class="element heading2" data-element-id="7e12ed2ef682e938"><div class="r_heading_inner"><span class="heading2_n">4.2</span><span>DataList 생성하기</span></div></h2><p id="r_47f2c562eeb54290" class="element normal" data-element-id="47f2c562eeb54290">데이터 객체의 옵션을 JSON으로 할당한 예시입니다.</p><div id="r_3a26f701478e6b29" class="element code support_code_numbering" data-element-id="3a26f701478e6b29"><pre><span class="digits_10 code_line"></span><span class="r_h_keyword_span">var</span> jsnOption;
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//DataList 속성 정의</span>
<span class="digits_10 code_line"></span>jsnOption = { 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> : <span class="r_h_string_span">"dlt_dynamic1"</span>,  <span class="r_h_comment_span">//생성할 DatList의 ID입니다.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"type"</span> : <span class="r_h_string_span">"dataList"</span>,    <span class="r_h_comment_span">//생성할 데이터객체의 타입입니다. dataList 고정.</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"option"</span> : { 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"baseNode"</span>: <span class="r_h_string_span">"list"</span>,
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"repeatNode"</span>: <span class="r_h_string_span">"map"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"columnInfo"</span> : [ 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> : <span class="r_h_string_span">"code"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"name"</span>: <span class="r_h_string_span">"코드"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"dataType"</span> :<span class="r_h_string_span">"text"</span> 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"id"</span> :<span class="r_h_string_span">"label"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"name"</span> : <span class="r_h_string_span">"코드명"</span>, 
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"dataType"</span> :<span class="r_h_string_span">"text"</span>
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;] 
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//1. DataCollection 생성하기</span>
<span class="digits_10 code_line"></span>$p.data.create(jsnOption);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//2. 생성된 객체에 Data 할당하기</span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">//옵션에 적용한 id로 직접 접근이 가능합니다.</span>
<span class="digits_10 code_line"></span>dlt_dynamic1.setJSON([
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="r_h_string_span">"lable"</span> : <span class="r_h_string_span">"소설"</span>, <span class="r_h_string_span">"code"</span> : <span class="r_h_string_span">"1"</span>},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="r_h_string_span">"lable"</span> : <span class="r_h_string_span">"인문"</span>, <span class="r_h_string_span">"code"</span> : <span class="r_h_string_span">"2"</span>},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{<span class="r_h_string_span">"lable"</span> : <span class="r_h_string_span">"자기계발"</span>, <span class="r_h_string_span">"code"</span> : <span class="r_h_string_span">"3"</span>}
<span class="digits_10 code_line"></span>]);
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">/*
<span class="digits_10 code_line"></span>//또는 아래와 같이 $p.getComponentById API로 객체를 반환 받아 제어할 수 있습니다.
<span class="digits_10 code_line"></span>let cmpDataList = $p.getComponentById("dlt_dynamic1");
<span class="digits_10 code_line"></span>cmpDataList.setJSON([
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "소설", "code" : "1"},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "인문", "code" : "2"},
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{"lable" : "자기계발", "code" : "3"}
<span class="digits_10 code_line"></span>]);
<span class="digits_10 code_line"></span>*/</span></pre></div><h1 id="r_a7fc1f82ab2e57b0" class="element heading1" data-element-id="a7fc1f82ab2e57b0"><div class="r_heading_inner"><span class="heading1_n">5</span><span>주요 API</span></div></h1><dl id="r_a634e5a2efbaf640" class="element definition_list" data-element-id="a634e5a2efbaf640"><dt><span class="r_ex_api_method_span">$p.data.create( dataCollectionString , dataCollectionObject )</span></dt></dl></div></body></html>