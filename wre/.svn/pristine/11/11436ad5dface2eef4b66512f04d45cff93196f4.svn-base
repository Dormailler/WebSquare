<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ko"><head><title>[DataList] 전체 데이터 설정(할당)하기</title><link rel="stylesheet" href="css/book.css" type="text/css" /><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8" /><meta name="EPB-UUID" content="db7d7f842b451ed6" /></head><body><div id="content"><h1 id="r_0799cd584dd9cc3f" class="chapter_title">[DataList] 전체 데이터 설정(할당)하기</h1><h1 id="r_0a2eab96d0c6ca11" class="element heading1" data-element-id="0a2eab96d0c6ca11"><div class="r_heading_inner"><span class="heading1_n">1</span><span>개요</span></div></h1><pre id="r_299fc33858bc0d95" class="element pre" data-element-id="299fc33858bc0d95">DataList에 전체 데이터를 설정하는 함수 예시입니다.
설정할 수 있는 데이터 유형은 4가지이며, 각 유형에 맞는 함수는 다음과 같습니다.</pre><ul id="r_c3a4329a4b5196f9" class="element unordered_list" data-element-id="c3a4329a4b5196f9"><li><p>JSON 형식 : setJSON</p></li><li><p>1차원 Array 형식 + 컬럼 정보 : setArray</p></li><li><p>1차원 Array 형식 : setData</p></li><li><p>XML 형식 : setXML</p></li></ul><p id="r_49f1818d28142f54" class="element r_example_link_p" data-element-id="49f1818d28142f54"><a class="link" href="http://example.websquare.kr/exampleLink.html?p=P00275">P00275</a></p><div id="r_9ac15ce2ae394d89" class="element tip" data-element-id="9ac15ce2ae394d89"><p>대량 데이터를 할당하는 경우 함수 setData 또는 setArray를 사용하는 것이 속도 개선에 도움이 됩니다.</p></div><h1 id="r_9b05a7b0b34a375c" class="element heading1" data-element-id="9b05a7b0b34a375c"><div class="r_heading_inner"><span class="heading1_n">2</span><span>구현된 기능</span></div></h1><ul id="r_0a2b1dae76b6ad34" class="element unordered_list" data-element-id="0a2b1dae76b6ad34"><li><p>전체 데이터를 JSON 형식으로 설정하기</p></li><li><p>컬럼 정보와 함께 전체 데이터를 1차원 Array 형식으로 설정하기</p></li><li><p>전체 데이터를 1차원 Array 형식으로 설정하기</p></li><li><p>전체 데이터를 XML 형식으로 설정하기</p></li></ul><h1 id="r_202d57be062397ca" class="element heading1" data-element-id="202d57be062397ca"><div class="r_heading_inner"><span class="heading1_n">3</span><span>예제 테스트 방법</span></div></h1><h2 id="r_3de20155cce00348" class="element heading2" data-element-id="3de20155cce00348"><div class="r_heading_inner"><span class="heading2_n">3.1</span><span>전체 데이터를 JSON 형식으로 설정하기</span></div></h2><p id="r_894590d351eb4413" class="element r_heading_dt_p" data-element-id="894590d351eb4413">STEP 1. 버튼 <span class="r_exec_btn_style_span">전체 데이터 설정하기 - JSON 형식</span>을 클릭합니다.</p><p id="r_fd78e022d48da81e" class="element r_heading_dt_p" data-element-id="fd78e022d48da81e">STEP 2. 실행 결과를 확인합니다.</p><pre id="r_f8b7ae241efd954a" class="element pre" data-element-id="f8b7ae241efd954a">DataList에 데이터가 할당되고 DataList와 연결된 GridView에 데이터가 출력됩니다.
버튼 하단에 구성된 GridView를 확인합니다.</pre><div id="r_3db56af7323d7bb3" class="element image" data-element-id="3db56af7323d7bb3"><p class="caption"><span class="image_caption_n">그림 1.</span>브라우저(Chrome) 실행 예시</p><p class="content"><img alt="" src="images/image042.png" width="357" height="100" /></p></div><pre id="r_2744585c633a3d01" class="element pre" data-element-id="2744585c633a3d01">영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 통해 설정된 데이터의 형식을 확인할 수 있습니다.다.
(브라우저의 개발자 도구 콘솔에도 로그가 출력되며, 설정된 객체를 확인할 수 있습니다.)</pre><p id="r_a25fdc1a4162f185" class="element r_caption_code_1_p" data-element-id="a25fdc1a4162f185">로그</p><div id="r_c0068e8becf55ee5" class="element code support_code_numbering" data-element-id="c0068e8becf55ee5"><pre><span class="digits_1 code_line"></span>[19:14:12] # 전체 데이터 설정하기 - JSON 형식 | 함수 setJSON 실행 
<span class="digits_1 code_line"></span> 데이터 예시
<span class="digits_1 code_line"></span>[19:14:12] [{"func_name":"setJSON","label":"공정하다는 착각"},{"func_name":"setJSON","label":"기분을 관리하면 인생이 관리된다"}]</pre></div><h2 id="r_94e25cd31034609c" class="element heading2" data-element-id="94e25cd31034609c"><div class="r_heading_inner"><span class="heading2_n">3.2</span><span>컬럼 정보와 함께 전체 데이터를 1차원 Array 형식으로 설정하기</span></div></h2><p id="r_59de52bc37748b58" class="element r_heading_dt_p" data-element-id="59de52bc37748b58">STEP 1. 버튼 <span class="r_exec_btn_style_span">전체 데이터 설정하기 - 1차원 Array 형식 + 컬럼 정보</span>을 클릭합니다.</p><p id="r_1365e57079a8f414" class="element r_heading_dt_p" data-element-id="1365e57079a8f414">STEP 2. 실행 결과를 확인합니다.</p><pre id="r_988ed818dd34c6df" class="element pre" data-element-id="988ed818dd34c6df">DataList에 데이터가 할당되고 DataList와 연결된 GridView에 데이터가 출력됩니다.
버튼 하단에 구성된 GridView를 확인합니다.</pre><div id="r_6d1126513e84699f" class="element image" data-element-id="6d1126513e84699f"><p class="caption"><span class="image_caption_n">그림 2.</span>브라우저(Chrome) 실행 예시</p><p class="content"><img alt="" src="images/image043.png" width="359" height="99" /></p></div><pre id="r_425f60626245fb9e" class="element pre" data-element-id="425f60626245fb9e">영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 통해 설정된 데이터의 형식을 확인할 수 있습니다.다.
(브라우저의 개발자 도구 콘솔에도 로그가 출력되며, 설정된 객체를 확인할 수 있습니다.)</pre><p id="r_733f4405e2bf3229" class="element r_caption_code_1_p" data-element-id="733f4405e2bf3229">로그</p><div id="r_3b63ad4463a06bcf" class="element code support_code_numbering" data-element-id="3b63ad4463a06bcf"><pre><span class="digits_1 code_line"></span>[19:15:55] # 전체 데이터 설정하기 - 1차원 Array 형식 + 컬럼 정보 | 함수 setArray 실행 
<span class="digits_1 code_line"></span> 데이터 예시
<span class="digits_1 code_line"></span>[19:15:55] {"columnInfo":["func_name","label"],"data":["setArray","내가 틀릴 수도 있습니다","setArray","너무 잘하려고 애쓰지 마라"]}</pre></div><h2 id="r_2d0c9aa8de398da4" class="element heading2" data-element-id="2d0c9aa8de398da4"><div class="r_heading_inner"><span class="heading2_n">3.3</span><span>전체 데이터를 1차원 Array 형식으로 설정하기</span></div></h2><p id="r_ff8ce804fc56c49b" class="element r_heading_dt_p" data-element-id="ff8ce804fc56c49b">STEP 1. 버튼 <span class="r_exec_btn_style_span">전체 데이터 설정하기 - 1차원 Array 형식</span>을 클릭합니다.</p><p id="r_54cc4b8346bb1b3d" class="element r_heading_dt_p" data-element-id="54cc4b8346bb1b3d">STEP 2. 실행 결과를 확인합니다.</p><pre id="r_06eef532fa946667" class="element pre" data-element-id="06eef532fa946667">DataList에 데이터가 할당되고 DataList와 연결된 GridView에 데이터가 출력됩니다.
버튼 하단에 구성된 GridView를 확인합니다.</pre><div id="r_2dd35df50d24487c" class="element image" data-element-id="2dd35df50d24487c"><p class="caption"><span class="image_caption_n">그림 3.</span>브라우저(Chrome) 실행 예시</p><p class="content"><img alt="" src="images/image044.png" width="361" height="100" /></p></div><pre id="r_163552947654ef6c" class="element pre" data-element-id="163552947654ef6c">영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 통해 설정된 데이터의 형식을 확인할 수 있습니다.다.
(브라우저의 개발자 도구 콘솔에도 로그가 출력되며, 설정된 객체를 확인할 수 있습니다.)</pre><p id="r_de6e96fd5602287a" class="element r_caption_code_1_p" data-element-id="de6e96fd5602287a">로그</p><div id="r_94d9ae252debc7ae" class="element code support_code_numbering" data-element-id="94d9ae252debc7ae"><pre><span class="digits_1 code_line"></span>[19:17:07] # 전체 데이터 설정하기 - 1차원 Array 형식 | 함수 setData 실행 
<span class="digits_1 code_line"></span> 데이터 예시
<span class="digits_1 code_line"></span>[19:17:07] ["setData","우리는 여전히 삶을 사랑하는가","setData","무엇이 옳은가"]</pre></div><h2 id="r_6cf98cdfa9160bfd" class="element heading2" data-element-id="6cf98cdfa9160bfd"><div class="r_heading_inner"><span class="heading2_n">3.4</span><span>전체 데이터를 XML 형식으로 설정하기</span></div></h2><p id="r_899e60ff5d58bb42" class="element r_heading_dt_p" data-element-id="899e60ff5d58bb42">STEP 1. 버튼 <span class="r_exec_btn_style_span">전체 데이터 설정하기 - XML 형식</span>을 클릭합니다.</p><p id="r_7ce7b32ff4271514" class="element r_heading_dt_p" data-element-id="7ce7b32ff4271514">STEP 2. 실행 결과를 확인합니다.</p><pre id="r_066485096029e9a9" class="element pre" data-element-id="066485096029e9a9">DataList에 데이터가 할당되고 DataList와 연결된 GridView에 데이터가 출력됩니다.
버튼 하단에 구성된 GridView를 확인합니다.</pre><div id="r_608bed0b69238efb" class="element image" data-element-id="608bed0b69238efb"><p class="caption"><span class="image_caption_n">그림 4.</span>브라우저(Chrome) 실행 예시</p><p class="content"><img alt="" src="images/image045.png" width="358" height="101" /></p></div><pre id="r_0942ce89dfb02839" class="element pre" data-element-id="0942ce89dfb02839">영역 [<span class="r_blue001_span">로그 확인</span>]에 출력된 로그를 통해 설정된 데이터의 형식을 확인할 수 있습니다.다.
(브라우저의 개발자 도구 콘솔에도 로그가 출력되며, 설정된 객체를 확인할 수 있습니다.)</pre><p id="r_ebf75e49d814ddea" class="element r_caption_code_1_p" data-element-id="ebf75e49d814ddea">로그</p><div id="r_bcbd8a734b4b37c7" class="element code support_code_numbering" data-element-id="bcbd8a734b4b37c7"><pre><span class="digits_1 code_line"></span>[19:18:29] # 전체 데이터 설정하기 - XML 형식 | 함수 setXML 실행 
<span class="digits_1 code_line"></span> 데이터 예시
<span class="digits_1 code_line"></span>[19:18:29] &lt;list&gt;&lt;map&gt;&lt;func_name&gt;setXML&lt;/func_name&gt;&lt;label&gt;작별인사&lt;/label&gt;&lt;/map&gt;&lt;map&gt;&lt;func_name&gt;setXML&lt;/func_name&gt;&lt;label&gt;문명의 붕괴(Collapse)&lt;/label&gt;&lt;/map&gt;&lt;/list&gt;</pre></div><h1 id="r_46f337b691b30b62" class="element heading1" data-element-id="46f337b691b30b62"><div class="r_heading_inner"><span class="heading1_n">4</span><span>구현 예시</span></div></h1><h2 id="r_7566eadf6d6e09e6" class="element heading2" data-element-id="7566eadf6d6e09e6"><div class="r_heading_inner"><span class="heading2_n">4.1</span><span>전체 데이터를 JSON 형식으로 설정하기</span></div></h2><pre id="r_2ba85ae3e99d9e35" class="element pre" data-element-id="2ba85ae3e99d9e35">원하는 시점에 컴포넌트의 함수 'setJSON'를 이용하여 스크립트를 작성합니다.
첫 번째 인자에 설정할 데이터를 JSON 형식으로 전달합니다.</pre><p id="r_5fa0a657ded0e91a" class="element r_caption_code_1_p" data-element-id="5fa0a657ded0e91a">스크립트</p><div id="r_df1abef2dce0f8e6" class="element code support_code_numbering" data-element-id="df1abef2dce0f8e6"><pre><span class="digits_1 code_line"></span><span class="r_h_comment_span">// 예제 파일에서는 스크립트 scwin.btn_exam1_1_onclick에 작성되어 있습니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="r_h_comment_span">// DataList 'dlt_books_1'의 전체 데이터를 JSON 형식으로 설정합니다.</span>
<span class="digits_1 code_line"></span><span class="r_h_keyword_span">let</span> data = [
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{ <span class="r_h_string_span">"func_name"</span>: <span class="r_h_string_span">"setJSON"</span>, <span class="r_h_string_span">"label"</span>: <span class="r_h_string_span">"공정하다는 착각"</span> },
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;{ <span class="r_h_string_span">"func_name"</span>: <span class="r_h_string_span">"setJSON"</span>, <span class="r_h_string_span">"label"</span>: <span class="r_h_string_span">"기분을 관리하면 인생이 관리된다"</span> }
<span class="digits_1 code_line"></span>];
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span>dlt_books_1.setJSON(data);</pre></div><h2 id="r_67fed82a28eb0cfe" class="element heading2" data-element-id="67fed82a28eb0cfe"><div class="r_heading_inner"><span class="heading2_n">4.2</span><span>컬럼 정보와 함께 전체 데이터를 1차원 Array 형식으로 설정하기</span></div></h2><pre id="r_16c0b47ad03998b4" class="element pre" data-element-id="16c0b47ad03998b4">원하는 시점에 컴포넌트의 함수 'setArray'를 이용하여 스크립트를 작성합니다.
첫 번째 인자에 설정할 데이터를 JSON 형식으로 전달합니다.</pre><p id="r_ed88b7e79b5f4537" class="element r_caption_code_1_p" data-element-id="ed88b7e79b5f4537">데이터 구조</p><div id="r_8666b5914f7afc6b" class="element code support_code_numbering" data-element-id="8666b5914f7afc6b"><pre><span class="digits_1 code_line"></span><span class="r_h_comment_span">// "columnInfo"에 정의된 컬럼의 순서에 맞춰 "data"에 데이터를 1차원 배열로 구성합니다.</span>
<span class="digits_1 code_line"></span>{
<span class="digits_1 code_line"></span>    <span class="r_h_attribute_name_span">"columnInfo"</span>: [<span class="r_h_string_span">"column_1"</span>, <span class="r_h_string_span">"column_2"</span>], <span class="r_h_comment_span">// DataList의 컬럼 ID가 담긴 1차원 배열로 설정할 컬럼 ID를 작성.</span>
<span class="digits_1 code_line"></span>    <span class="r_h_string_span">"data"</span>: [<span class="r_h_string_span">"column_1 row_1"</span>, <span class="r_h_string_span">"column_2 row_1"</span>, <span class="r_h_string_span">"column_1 row_2"</span>, <span class="r_h_string_span">"column_2 row_2"</span>] <span class="r_h_comment_span">// 'columnInfo'에 정의한 컬럼의 순서대로 구성된 1차원 배열 데이터.</span>
<span class="digits_1 code_line"></span>}</pre></div><p id="r_cf45e3893cd0c97f" class="element r_caption_code_1_p" data-element-id="cf45e3893cd0c97f">스크립트</p><div id="r_48af04a10163a9ac" class="element code support_code_numbering" data-element-id="48af04a10163a9ac"><pre><span class="digits_10 code_line"></span><span class="r_h_comment_span">// 예제 파일에서는 스크립트 scwin.btn_exam1_2_onclick에 작성되어 있습니다.</span>
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">// DataList 'dlt_books_1'의 전체 데이터를 '1차원 Array 형식 + 컬럼 정보'으로 설정합니다.</span>
<span class="digits_10 code_line"></span><span class="r_h_comment_span">// DataList의 컬럼 "func_name"와 "label"에 데이터를 설정합니다.</span>
<span class="digits_10 code_line"></span><span class="r_h_keyword_span">let</span> data = {
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"columnInfo"</span>: [<span class="r_h_string_span">"func_name"</span>, <span class="r_h_string_span">"label"</span>],
<span class="digits_10 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="r_h_string_span">"data"</span>: [<span class="r_h_string_span">"setArray"</span>, <span class="r_h_string_span">"내가 틀릴 수도 있습니다"</span>, <span class="r_h_string_span">"setArray"</span>, <span class="r_h_string_span">"너무 잘하려고 애쓰지 마라"</span>]
<span class="digits_10 code_line"></span>};
<span class="digits_10 code_line"></span>
<span class="digits_10 code_line"></span>dlt_books_1.setArray(data);</pre></div><h2 id="r_ef39e0a838987183" class="element heading2" data-element-id="ef39e0a838987183"><div class="r_heading_inner"><span class="heading2_n">4.3</span><span>전체 데이터를 1차원 Array 형식으로 설정하기</span></div></h2><pre id="r_a719008c52d14c01" class="element pre" data-element-id="a719008c52d14c01">원하는 시점에 컴포넌트의 함수 'setData'를 이용하여 스크립트를 작성합니다.
첫 번째 인자에 설정할 데이터를 1차원 Array 형식으로 전달합니다.
데이터의 순서는 DataList에 정의된 컬럼의 순서와 일치해야 합니다.</pre><p id="r_a71bb8de7b94fd47" class="element r_caption_code_1_p" data-element-id="a71bb8de7b94fd47">스크립트</p><div id="r_b67f88e13b14cfe6" class="element code support_code_numbering" data-element-id="b67f88e13b14cfe6"><pre><span class="digits_1 code_line"></span><span class="r_h_comment_span">// 예제 파일에서는 스크립트 scwin.btn_exam1_3_onclick에 작성되어 있습니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="r_h_comment_span">// DataList 'dlt_books_1'의 전체 데이터를 '1차원 Array 형식'으로 설정합니다.</span>
<span class="digits_1 code_line"></span><span class="r_h_keyword_span">let</span> data = [<span class="r_h_string_span">"setData"</span>, <span class="r_h_string_span">"우리는 여전히 삶을 사랑하는가"</span>, <span class="r_h_string_span">"setData"</span>, <span class="r_h_string_span">"무엇이 옳은가"</span>];
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span>dlt_books_1.setData(data);</pre></div><p id="r_315e855260d3f55e" class="element r_caption_code_1_p" data-element-id="315e855260d3f55e">소스 코드 - DataList 정의</p><div id="r_219976da7e5437c9" class="element code support_code_numbering" data-element-id="219976da7e5437c9"><pre><span class="digits_1 code_line"></span>&lt;w2:dataList <span class="r_h_attribute_name_span">baseNode</span>=<span class="r_h_attribute_value_span">"list"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"dlt_books_1"</span> <span class="r_h_attribute_name_span">repeatNode</span>=<span class="r_h_attribute_value_span">"map"</span> <span class="r_h_attribute_name_span">valueAttribute</span>=<span class="r_h_attribute_value_span">""</span>&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:columnInfo&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:column <span class="r_h_attribute_name_span">dataType</span>=<span class="r_h_attribute_value_span">"text"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"func_name"</span> <span class="r_h_attribute_name_span">name</span>=<span class="r_h_attribute_value_span">"함수명"</span>&gt;&lt;/w2:column&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:column <span class="r_h_attribute_name_span">dataType</span>=<span class="r_h_attribute_value_span">"text"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"label"</span> <span class="r_h_attribute_name_span">name</span>=<span class="r_h_attribute_value_span">"도서명"</span>&gt;&lt;/w2:column&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/w2:columnInfo&gt;
<span class="digits_1 code_line"></span>&lt;/w2:dataList&gt;</pre></div><h2 id="r_915c64c9f4c6bc95" class="element heading2" data-element-id="915c64c9f4c6bc95"><div class="r_heading_inner"><span class="heading2_n">4.4</span><span>전체 데이터를 XML 형식으로 설정하기</span></div></h2><pre id="r_a1e0f25163eeefd7" class="element pre" data-element-id="a1e0f25163eeefd7">원하는 시점에 컴포넌트의 함수 'setXML'를 이용하여 스크립트를 작성합니다.
첫 번째 인자에 설정할 데이터를 XML 형식으로 전달합니다.
XML의 노드명은 Dataist의 속성 'baseNode'와 속성 'repeatNode'의 값에 정의된 값으로 구성합니다.</pre><p id="r_64f55111c33c42bf" class="element r_caption_code_1_p" data-element-id="64f55111c33c42bf">스크립트</p><div id="r_ec6fc5d5990c7b9b" class="element code support_code_numbering" data-element-id="ec6fc5d5990c7b9b"><pre><span class="digits_1 code_line"></span><span class="r_h_comment_span">// 예제 파일에서는 스크립트 scwin.btn_exam1_4_onclick에 작성되어 있습니다.</span>
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span><span class="r_h_comment_span">// DataList 'dlt_books_1'의 전체 데이터를 XML 형식으로 설정합니다.</span>
<span class="digits_1 code_line"></span><span class="r_h_keyword_span">let</span> data = WebSquare.xml.parse(<span class="r_h_string_span">"&lt;list&gt;&lt;map&gt;&lt;func_name&gt;setXML&lt;/func_name&gt;&lt;label&gt;작별인사&lt;/label&gt;&lt;/map&gt;&lt;map&gt;&lt;func_name&gt;setXML&lt;/func_name&gt;&lt;label&gt;문명의 붕괴(Collapse)&lt;/label&gt;&lt;/map&gt;&lt;/list&gt;"</span>);
<span class="digits_1 code_line"></span>
<span class="digits_1 code_line"></span>dlt_books_1.setXML(data);</pre></div><p id="r_a371540b345928ea" class="element r_caption_code_1_p" data-element-id="a371540b345928ea">소스 코드 - DataList 정의</p><div id="r_860b53b013fbcf3c" class="element code support_code_numbering" data-element-id="860b53b013fbcf3c"><pre><span class="digits_1 code_line"></span>&lt;w2:dataList <span class="r_h_attribute_name_span">baseNode</span>=<span class="r_h_attribute_value_span">"list"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"dlt_books_1"</span> <span class="r_h_attribute_name_span">repeatNode</span>=<span class="r_h_attribute_value_span">"map"</span> <span class="r_h_attribute_name_span">valueAttribute</span>=<span class="r_h_attribute_value_span">""</span>&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:columnInfo&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:column <span class="r_h_attribute_name_span">dataType</span>=<span class="r_h_attribute_value_span">"text"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"func_name"</span> <span class="r_h_attribute_name_span">name</span>=<span class="r_h_attribute_value_span">"함수명"</span>&gt;&lt;/w2:column&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;w2:column <span class="r_h_attribute_name_span">dataType</span>=<span class="r_h_attribute_value_span">"text"</span> <span class="r_h_attribute_name_span">id</span>=<span class="r_h_attribute_value_span">"label"</span> <span class="r_h_attribute_name_span">name</span>=<span class="r_h_attribute_value_span">"도서명"</span>&gt;&lt;/w2:column&gt;
<span class="digits_1 code_line"></span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/w2:columnInfo&gt;
<span class="digits_1 code_line"></span>&lt;/w2:dataList&gt;</pre></div><p id="r_6f1580d9d33b29f0" class="element r_caption_code_1_p" data-element-id="6f1580d9d33b29f0">데이터 형식 - beautify 적용</p><div id="r_2d12f5b7d3a1b8bb" class="element code support_code_numbering" data-element-id="2d12f5b7d3a1b8bb"><pre><span class="digits_10 code_line"></span>&lt;list&gt;
<span class="digits_10 code_line"></span>    &lt;map&gt;
<span class="digits_10 code_line"></span>        &lt;func_name&gt;setXML&lt;/func_name&gt;
<span class="digits_10 code_line"></span>        &lt;label&gt;작별인사&lt;/label&gt;
<span class="digits_10 code_line"></span>    &lt;/map&gt;
<span class="digits_10 code_line"></span>    &lt;map&gt;
<span class="digits_10 code_line"></span>        &lt;func_name&gt;setXML&lt;/func_name&gt;
<span class="digits_10 code_line"></span>        &lt;label&gt;문명의 붕괴(Collapse)&lt;/label&gt;
<span class="digits_10 code_line"></span>    &lt;/map&gt;
<span class="digits_10 code_line"></span>&lt;/list&gt;</pre></div><h1 id="r_89b5be02a9e183e0" class="element heading1" data-element-id="89b5be02a9e183e0"><div class="r_heading_inner"><span class="heading1_n">5</span><span>주요 API</span></div></h1><ul id="r_9417cc1cde9be5f6" class="element unordered_list" data-element-id="9417cc1cde9be5f6"><li><p><span class="r_ex_api_method_span">setJSON( jsonData , append )</span></p></li><li><p><span class="r_ex_api_method_span">setArray( jsonData , append )</span></p></li><li><p><span class="r_ex_api_method_span">setData( arr , append , columnArr , rowStatus )</span></p></li><li><p><span class="r_ex_api_method_span">setXML( xmlData , append )</span></p></li></ul></div></body></html>